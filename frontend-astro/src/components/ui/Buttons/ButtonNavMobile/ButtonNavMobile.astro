---
import AIcon from "@components/AIcon.astro";
type Elements = 'a' | 'button';

interface Props {
    iconName: string,
    href?: string,
    class?: string,
    element?: Elements,
}

const {
    class: className,
    iconName,
    element,
    element: Element = 'a',
    ...rest
} = Astro.props as Props;
---
<script>
    import initButtonNavMobile from './index';

    initButtonNavMobile();
</script>

<Element
        class="button-nav-mobile"
        class:list={[className]} {...rest}>
    {element === 'button' && (
            <div class="button-nav-mobile__icon">
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
            </div>
    ) || (
            <AIcon symbolId={iconName} size="s"></AIcon>
    )}
    <span class="button-nav-mobile__text js-button-nav-mobile-text">
        <slot/>
    </span>
</Element>

<style lang="scss" is:global>
  @use "sass:map";
  @import "@styles/variables";
  @import "@styles/placeholders";

  .button-nav-mobile {
    $root: #{&};
    @extend %reset-button;
    @extend %reset-link;

    display: flex;
    flex-direction: column;
    place-items: center;
    letter-spacing: -0.01em;
    font-size: .625rem;
    line-height: 1.4;
    color: var(--violet-100);
    padding: .3125rem; //5px
    border-radius: .25rem;
    transition: color ease .33s, background-color ease .33s;

    @include use-media(tablet) {
      padding: .375rem; //6px
      gap: .25rem;
      font-size: .75rem;
      border-radius: .375rem; //6px;
    }

    &:hover,
    &:active {
      color: var(--blue-100);

      #{$root}__text {
        color: var(--blue-70);
      }
    }

    &__icon {
      width: 1rem;
      height: 1rem;
      position: relative;
      transform: rotate(0deg);
      transition: .5s ease-in-out;

      span {
        display: block;
        position: absolute;
        height: 2px;
        width: calc(50% - 1px);
        background-color: var(--dark-0);
        opacity: 1;
        transition: .25s ease-in-out;

        &:nth-child(even) {
          left: 50%;
          border-radius: 0 .25rem .25rem 0;
        }

        &:nth-child(odd) {
          left: 1px;
          border-radius: .25rem 0 0 .25rem;
        }

        &:nth-child(1),
        &:nth-child(2) {
          top: 3px;
        }

        &:nth-child(3),
        &:nth-child(4) {
          top: 7px;
        }

        &:nth-child(5),
        &:nth-child(6) {
          top: 11px;
        }
      }
    }

    &--acent {
      background: linear-gradient(357.46deg, #4C3A6C 2.13%, #66447A 97.87%);
      color: var(--dark-0);

      &:hover,
      &:active {
        color: var(--dark-0);

        #{$root}__text {
          color: var(--dark-0);
        }
      }

      &.is-open {
        background: linear-gradient(94.31deg, #412674 0%, #2E1B52 100%);

        #{$root}__icon {
          & span {

            &:nth-child(1),
            &:nth-child(6) {
              transform: rotate(45deg);
            }

            &:nth-child(2),
            &:nth-child(5) {
              transform: rotate(-45deg);
            }

            &:nth-child(1) {
              left: 3px;
              top: 5px;
            }

            &:nth-child(2) {
              left: calc(50% - 1px);
              top: 5px;
            }

            &:nth-child(3) {
              left: -50%;
              opacity: 0;
            }

            &:nth-child(4) {
              left: 100%;
              opacity: 0;
            }

            &:nth-child(5) {
              left: 3px;
              top: 10px;
            }

            &:nth-child(6) {
              left: calc(50% - 1px);
              top: 10px;
            }
          }
        }
      }
    }
  }

</style>


