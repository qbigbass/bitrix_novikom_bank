---
interface Props {
    class?: string;
    value: string;
    displayValue: string;
    selected?: boolean;
    href?: string;
}

const {
    class: classList,
    value,
    displayValue,
    selected = false,
    href,
    ...rest
} = Astro.props as Props;

let Element = href?.length ? 'a' : 'div';
const isLink = Element.toLocaleLowerCase() === 'a';
---

<Element
        class="a-drop-down-item js-a-drop-down-item"
        class:list={classList}
        href={isLink ? href : undefined}
        data-value={value}
        data-display-value={displayValue}
        aria-selected={[selected]}
        {...rest}
>
    <slot/>
</Element>

<style lang="scss" is:global>
    @import "@styles/media-queries";
    @import "@styles/placeholders";

    .a-drop-down-item {
        display: block;
        border: none;
        width: 100%;
        text-align: left;
        cursor: pointer;
        padding: 1rem;
        background-color: var(--dark-0);
        transition: color ease .33s;
        text-decoration: unset;

        &:hover:not(&[aria-selected=true]) {
            color: var(--blue-100);
        }

        &[aria-selected=true] {
            background-color: var(--dark-30);
            color: var(--blue-100);
            pointer-events: none;
        }
    }
</style>
