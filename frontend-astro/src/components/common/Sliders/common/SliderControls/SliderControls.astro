---
import AIcon from "@components/AIcon.astro";
interface Props {
	class?: string
}

const {
	class: className,
	...rest
} = Astro.props as Props;
---

<div class="slider-controls js-swiper-controls" class:list={[className]} {...rest}>
	<div class="slider-controls__pagination js-swiper-pagination"></div>
	<div class="slider-controls__navigation js-swiper-nav">
		<button type="button" class="swiper-button-prev js-swiper-prev">
			<AIcon symbolId="icon-chevron-left" size="m" />
		</button>
		<button type="button" class="swiper-button-next js-swiper-next">
			<AIcon symbolId="icon-chevron-right" size="m" />
		</button>
	</div>
</div>

<style lang="scss" is:global>
	@use "sass:map";
	@import "@styles/variables";
	@import "@styles/placeholders";
	@import "@styles/media-queries";

	$base-transition: map.get($transitions, default);

	.slider-controls {
		display: flex;
		justify-content: center;
		align-items: center;

		&__pagination {
			display: flex;
			align-items: center;
			gap: .5rem;
		}

		&__navigation {
			display: none;
			gap: 1rem;

			@include use-media(tablet-album) {
				display: flex;
			}
		}

		&__navigation.swiper-navigation-disabled {
			display: none !important;
		}

		&__pagination.swiper-pagination-disabled {
			display: none !important;
		}

		@include use-media(tablet-album) {
			justify-content: space-between;
		}
	}

	.swiper-pagination-bullet {
		display: block;
		cursor: pointer;
		width: 1.5rem;
		height: 0.125rem;
		background: var(--blue-30);
		border-radius: 0.125rem;
		transition: background $base-transition, border-radius $base-transition, width $base-transition, height $base-transition, transform $base-transition;

		&:hover {
			background: var(--blue-70);
		}
	}

	.swiper-pagination-bullet-active {
		background: var(--blue-100);
	}

	.swiper-button-prev,
	.swiper-button-next {
		@extend %reset-button;

		width: 1.5rem;
		height: 1.5rem;
		color: var(--blue-100);
		transition: color $base-transition;
		cursor: pointer;
	}

	.swiper-button-disabled {
		color: var(--blue-30);
		cursor: default;
	}
</style>