---
import PatternBg from "@components/common/Pattern/PatternBg.astro";
import SectionLayout from "../layouts/SectionLayout.astro";
import type {BgColor} from "../layouts/SectionLayout.astro";

interface Props {
	class?: string;
	backgroundColor?: BgColor;
	hasPattern?: boolean;

}

const {
	class: className = '',
	backgroundColor,
	hasPattern = false,
} = Astro.props;
---
<SectionLayout
	bgColor={backgroundColor}
	class="section-client-info"
	class:list={className}
>
	{ hasPattern && (
		<PatternBg type="section-2" />
	)}
	<div class="content-container">
		<div class="section-client-info__container">
			<div class="section-client-info__top">
				<slot name="top" />
			</div>
			{ Astro.slots.has('bottom') && (
				<div class="section-client-info__bottom">
					<slot name="bottom" />
				</div>
			)}
		</div>
	</div>
</SectionLayout>

<style lang="scss" is:global>
	@import "@styles/placeholders";
	@import "@styles/media-queries";

	.section-client-info {
		$root: #{&};
		position: relative;
		overflow: hidden;

		&__pattern {
			position: absolute;
			bottom: 0;
			object-fit: cover;

			display: none;

			@include use-media(tablet) {
				display: block;
				left: 15%;
			}

			@include use-media(tablet-album) {
				right: 0;
				left: auto;
			}
		}

		&__container {
			display: flex;
			flex-direction: column;
			gap: 2.5rem;

			@include use-media(laptop-x) {
				flex-direction: row;
			}
		}

		&__top {
			width: 100%;

			@include use-media(laptop-x) {
				width: calc(50% - 1.25rem);
				flex-basis: calc(50% - 1.25rem);
			}

			& > * {
				height: 100%;
			}
		}

		&__bottom {
			width: 100%;

			@include use-media(laptop-x) {
				width: calc(50% - 1.25rem);
				flex-basis: calc(50% - 1.25rem);
			}

			& > * {
				height: 100%;
			}
		}
	}
</style>
