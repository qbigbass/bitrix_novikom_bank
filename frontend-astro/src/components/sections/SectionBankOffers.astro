---
import OfferCard from "../common/OfferCard/OfferCard.astro";
import ATag from "../ui/ATag/ATag.astro";
import SectionTitle from "../ui/SectionTitle/SectionTitle.astro";
import SectionLayout from "../layouts/SectionLayout.astro";
import SliderSlide from "../common/Sliders/common/SliderSlide/SliderSlide.astro";
import PersistentSlider from "../common/Sliders/PersistentSlider/PersistentSlider.astro";

import type {OfferCardColor} from "../common/OfferCard/OfferCard.astro";

type OfferCard = {
    title: string;
    description?: string;
    imgSrc: string;
    href: string;
    beforeNumberText?: string;
    numberText?: string;
    afterNumberText?: string;
    buttonText: string;
    tagText?: string;
    cardColor: OfferCardColor;
    textLink?: boolean;
}

interface Props {
    class?: string;
    title?: string;
	slidesPerView?: string;
	spaceBetween?: string;
    cards: OfferCard[]
}

const {
    class: className,
    title,
    cards: offerCards,
	spaceBetween = 'mobile-s:8,mobile:8,tablet:16,laptop:16,laptop-x:40',
	slidesPerView = 'mobile-s:1,mobile:1,tablet:2,laptop:2,laptop-x:3',
    ...rest
} = Astro.props;
---

<SectionLayout>
    <div class="content-container">
        {title &&
                <SectionTitle titleClass="headline-3" usePadding>{title}</SectionTitle>}

        <PersistentSlider spaceBetween={spaceBetween} slidesPerView={slidesPerView}>
            {
                offerCards.map((card) => (
                        <SliderSlide>
                            <OfferCard
                                    imgSrc={card.imgSrc}
                                    color={card.cardColor}
                                    textButton={card.buttonText}
                                    title={card.title}
                                    description={card.description}
                                    textIndicating={
                                        {
                                            text: card.numberText ? card.numberText : '',
                                            beforeText: card.beforeNumberText ? card.beforeNumberText : '',
                                            afterText: card.afterNumberText ? card.afterNumberText : '',
                                        }
                                    }
                                    textLink={card.textLink}
                            >
                                {card.tagText && (
                                        <div class="offer-card__tag" slot="tag">
                                            <ATag>{card.tagText}</ATag>
                                        </div>
                                )}
                            </OfferCard>
                        </SliderSlide>
                ))
            }
        </PersistentSlider>
    </div>
</SectionLayout>

