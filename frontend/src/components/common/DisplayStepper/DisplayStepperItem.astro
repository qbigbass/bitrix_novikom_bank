---
import DisplayStepperIconArrow from "./icons/DisplayStepperIconArrow.astro";
import DisplayStepperIconLevel1 from "./icons/DisplayStepperIconLevel1.astro";
import DisplayStepperIconLevel2 from "./icons/DisplayStepperIconLevel2.astro";
import DisplayStepperIconLevel3 from "./icons/DisplayStepperIconLevel3.astro";
import DisplayStepperIconLevel4 from "./icons/DisplayStepperIconLevel4.astro";
import AIcon from "../../AIcon.astro";
type Colors = "yellow"; // default green

interface Props {
	class?: string;
	icon?: string;
	number?: number;
	inRow?: boolean;
	color?: Colors;
}

let {
	number = 1,
	icon,
	class: className,
	inRow,
	color,
	...rest
} = Astro.props;

if (number < 1) number = 1;
---

<div
class:list={[
	"display-stepper-item",
	{'display-stepper-item--in-row': inRow},
	`${color ? `display-stepper-item--color-${color}` : ""}`,
	className,
	{ ...rest },
]}>
	<div class="display-stepper-item__header">
		{
			icon
				? (
					<div class="display-stepper-item__icon">
						<AIcon symbolId={icon} size="xl" />
					</div>
				)
				: (
					<div class="display-stepper-item__number">
						<div class="display-stepper-item__number-value">{number}</div>
						<div class="display-stepper-item__number-icon">
							{ number >= 1 && (<DisplayStepperIconLevel1 />) }
							{ number >= 2 && (<DisplayStepperIconLevel2 />) }
							{ number >= 3 && (<DisplayStepperIconLevel3 />) }
							{ number >= 4 && (<DisplayStepperIconLevel4 />) }
						</div>
					</div>
					<div class="display-stepper-item__arrow">
						<DisplayStepperIconArrow />
					</div>
				)
		}
	</div>
	<div class="display-stepper-item__content">
		<slot />
		{Astro.slots.has('footer') && (
			<div class="display-stepper-item__footer">
				<slot name="footer" />
			</div>
		)}
	</div>

</div>

<style lang="scss" is:global>
	@import "@styles/media-queries";

	.display-stepper-item {
		$root: &;

		display: flex;
		flex-direction: column;
		gap: .5rem;

		@include use-media(tablet) {
			flex-direction: row;
			align-items: center;
			gap: 1.5rem;
		}

		@include use-media(tablet-album) {
			flex-direction: column;
			align-items: flex-start;
			gap: 1rem;
		}

		&:last-child & {
			&__arrow {
				display: none;
			}
		}

		&__icon {
			color: var(--green-100);
		}

		&__header {
			display: flex;
			flex-shrink: 0;
			align-items: flex-start;
			gap: 1.5rem;

			@include use-media(tablet-album) {
				width: 100%;
			}
		}

		&__number {
			display: flex;
			justify-content: center;
			position: relative;
			height: 5rem;
			flex-shrink: 0;
			width: 5rem;
		}

		&__number-value {
			padding: 0.5rem 0;
			position: relative;
			color: var(--dark-0);
			width: 100%;
			text-align: center;
			z-index: 1;

			font-size: 2rem;
			line-height: 1.25;
			font-weight: 700;
		}

		&__number-icon {
			position: absolute;
			color: var(--green-100);
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			padding: 0.5rem 0;
		}

		&__arrow {
			display: none;
			flex-grow: 1;
			padding-top: calc(1.875rem - 0.563rem / 2);
			color: var(--green-100);

			@include use-media(tablet-album) {
				display: flex;
			}
		}

		&__content {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			gap: .5rem;

			@include use-media(tablet) {
				gap: 1rem;
			}

			@include use-media(tablet-album) {
				flex-grow: 1;
			}
		}

		&__footer {

			@include use-media(tablet) {
				padding-top: .5rem;
			}

			@include use-media(tablet-album) {
				margin-top: auto;
			}
		}

		&--in-row {

			@include use-media(tablet) {
				display: flex;
				align-items: center;
				row-gap: unset;
			}

			@include use-media(tablet-album) {
				flex-direction: row;
				gap: 2.5rem;
			}

			#{$root}__header {
				width: auto;
			}
		}

		&--color-yellow {

			#{$root}__number-value {
				color: var(--dark-100);
			}

			#{$root}__number-icon,
			#{$root}__icon,
			#{$root}__arrow {
				color: var(--yellow-100);
			}
		}
	}

	.display-stepper-icon {
		display: flex;
		flex-shrink: 0;
		position: absolute;
		width: 100%;

		svg {
			width: 100%;
		}

		&[data-level="1"] {
			top: 0.5rem;
		}

		&[data-level="2"] {
			top: 1rem;
		}

		&[data-level="3"] {
			top: 1.5rem;
		}

		&[data-level="4"] {
			top: 2rem;
		}
	}
</style>
