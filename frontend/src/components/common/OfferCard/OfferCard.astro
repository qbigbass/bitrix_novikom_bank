---
import AList from "@components/ui/AList/AList.astro";
import AButton from "../../ui/Buttons/AButton.astro";
import type { TextIndicatingBenefitsProps } from "../TextIndicatingBenefits";
import TextIndicatingBenefits from "../TextIndicatingBenefits/TextIndicatingBenefits.astro";
export type OfferCardColor = "green" | "orange" | "yellow" | "transparent";

export interface Props {
    color?: OfferCardColor;
    textButton?: string;
    imgSrc: string;
    href?: string;
    class?: string;
    title: string;
    backgroundColor?: string;
    description?: string;
    textIndicating?: TextIndicatingBenefitsProps;
    textLink?: boolean;
    list?: string[];
    size?: "large" | "default";
}

const {
    color = "green",
    textButton = "Button",
    imgSrc,
    class: className,
    title,
    description,
    href,
    textIndicating,
    textLink = false,
    backgroundColor,
    list,
    size,
    ...rest
} = Astro.props;

const showTag = !!Astro.slots["tag"];
const listSize = size === 'large' ? 'ml' : 'm';
---

<div
    class:list={[
        "offer-card",
        `offer-card--${color}`,
        `${backgroundColor ? `offer-card--bg-${backgroundColor}` : ""}`,
        `${size ? `offer-card--type-${size}` : ""}`,
        className,
    ]}
>
    <div class="offer-card__inner">
        {showTag && <slot name="tag" />}
        <div class="offer-card__content">
            <h3 class="offer-card__title headline-3" set:html={title} />
            {
                textIndicating?.text && (
                    <TextIndicatingBenefits
                        headClass="violet-100"
                        startText={textIndicating.startText}
                        beforeText={textIndicating.beforeText}
                        text={textIndicating.text}
                        afterText={textIndicating.afterText}
                        currency={textIndicating.currency}
                    />
                )
            }
            {
                description && (
                    <p
                        class="offer-card__description body-m-light"
                        set:html={description}
                    />
                )
            }
            {
                list?.length && (
                    <AList size={listSize}>
                        {list.map((item) => (
                            <li set:html={item} />
                        ))}
                    </AList>
                )
            }
        </div>
        <img class="offer-card__img" src={imgSrc} alt="" loading="lazy" />
        {
            textLink ? (
                <AButton
                    element="a"
                    text
                    afterIcon="icon-chevron-right"
                    href={href}
                    size="m"
                    class="offer-card__link"
                >
                    {textButton}
                </AButton>
            ) : (
                <AButton
                    element="a"
                    href={href}
                    size="m"
                    class="offer-card__link"
                >
                    {textButton}
                </AButton>
            )
        }
    </div>
</div>

<style lang="scss" is:global>
    @import "@styles/media-queries";

    .offer-card {
        $root: #{&};

        position: relative;
        padding: 1.5rem 1rem;
        background-color: var(--dark-10);
        overflow: hidden;
        border-radius: 0.75rem;
        height: 100%;

        @include use-media(tablet) {
            padding: 2rem;
        }

        @include use-media(tablet-album) {
            padding: 2.5rem;
        }

        &:before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 0.5rem;
        }

        &__tag {
            margin-bottom: 0.188rem;

            @include use-media(tablet-album) {
                margin-bottom: -1.313rem;
            }
        }

        &__inner {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            height: 100%;

            @include use-media(tablet) {
                min-height: auto;
            }

            @include use-media(tablet-album) {
                gap: 3rem;
            }
        }

        &__content {
            position: relative;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            flex: 1;
            z-index: 1;
        }

        &__description {
            @include use-media(tablet-album) {
                max-width: 60%;
            }

            @include use-media(desktop) {
                max-width: 80%;
            }
        }

        &__link {
            position: relative;
            z-index: 1;

            @include use-media(tablet-album) {
                align-self: flex-start;
            }
        }

        &__img {
            align-self: center;
            width: auto;
            height: 12.5rem;
            width: 12.5rem;

            svg {
                width: 100%;
                height: 100%;
                object-fit: contain;
            }

            @include use-media(tablet-album) {
                position: absolute;
                left: unset;
                transform: unset;
                bottom: -1.5rem;
                right: -1.5rem;
                z-index: 0;

				height: 17.5rem;
                width: 17.5rem;
            }
        }

        &--green {
            &:before {
                background-color: var(--green-100);
            }
        }

        &--orange {
            &:before {
                background-color: var(--orange-100);
            }
        }

        &--yellow {
            &:before {
                background-color: var(--yellow-100);
            }
        }

        &--transparent {
            &:before {
                display: none;
            }
        }

        &--bg-white {
            background-color: var(--dark-0);
        }

        &--type-large {
            #{$root}__img {

                @include use-media(tablet) {
                    position: absolute;
                    left: unset;
                    transform: unset;
                    bottom: -1.5rem;
                    right: -1.5rem;
                    z-index: 0;
					height: 17.5rem;
                	width: 17.5rem;
                }

				@include use-media(tablet-album) {
					bottom: -3rem;
                    right: -3rem;
					height: 30rem;
                	width: 30rem;
				}
            }

			#{$root}__link {

				@include use-media(tablet) {
					align-self: flex-start;
				}
			}

			#{$root}__inner {

				@include use-media(tablet) {
					gap: 2.5rem;
				}
			}

			#{$root}__content {
				
				@include use-media(tablet) {
					max-width: 70%;
				}

				@include use-media(tablet-album) {
					gap: 1.5rem;
					max-width: 60%;
				}

				@include use-media(laptop-x) {
					max-width: unset;
				}
			}

			#{$root}__title {
				@include use-media(tablet) {
					font-size: 1.75rem;
					line-height: 1.3;
				}

				@include use-media(tablet-album) {
					font-size: 2rem;
					line-height: 1.25;
				}
			}

			#{$root}__description {
				@include use-media(tablet) {
					font-size: 1.125rem;
					line-height: 1.45;
				}

				@include use-media(tablet-album) {
					font-size: 1.25rem;
					line-height: 1.4;
					max-width: unset;
				}
			}
        }
    }
</style>
