---
import CardProduct from "@components/common/Cards/CardProduct.astro";
import type {
    iconColors,
    BackgroundColors,
} from "@components/common/Cards/CardProduct.astro";
import OfferCard from "@components/common/OfferCard/OfferCard.astro";
import type { OfferCardColor } from "@components/common/OfferCard/OfferCard.astro";

type ProductCards = {
    title: string;
    text: string;
    icon: string;
    backgroundColor: BackgroundColors;
    iconColor: iconColors;
};

type OfferCards = {
    color?: OfferCardColor;
    textButton?: string;
    imgSrc: string;
    href?: string;
    class?: string;
    title: string;
    backgroundColor?: string;
    description?: string;
    textLink?: boolean;
    list?: string[];
    size?: "large" | "default";
};

interface Props {
    class?: string;
    productCards?: ProductCards[];
    offerCards?: OfferCards[];
}

const { class: className, productCards, offerCards } = Astro.props as Props;

// сетка для катрочек
---

<div class="section-card-layout">
    {
        offerCards && (
            <div class="offer-card-grid">
                {offerCards.map((card) => (
                    <OfferCard
                        href={card.href}
                        imgSrc={card.imgSrc}
                        title={card.title}
                        description={card.description}
                        textButton={card.textButton}
                        backgroundColor={card.backgroundColor}
                        color={card.color}
                        textLink={card.textLink}
                        list={card.list}
                        size={card.size}
                    />
                ))}
            </div>
        )
    }

    {Astro.slots["banner"] && <slot name="banner" />}

    {
        productCards && (
            <div class="product-card-grid">
                {productCards.map(
                    ({ title, text, icon, backgroundColor, iconColor }) => (
                        <CardProduct
                            title={title}
                            text={text}
                            icon={icon}
                            backgroundColor={backgroundColor}
                            iconColor={iconColor}
                        />
                    ),
                )}
            </div>
        )
    }
</div>

<style lang="scss" is:global>
    @import "@styles/media-queries";

    .section-card-layout {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.5rem;

        @include use-media(tablet) {
            gap: 2rem;
        }

        @include use-media(tablet-album) {
            gap: 3rem;
        }
    }

    .product-card-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;

        @include use-media(tablet) {
            gap: 2rem;
        }

        @include use-media(tablet-album) {
            column-gap: 2.5rem;
            row-gap: 3rem;
        }

        & > * {
            flex-basis: 100%;

            @include use-media(tablet) {
                flex-basis: calc(50% - 2rem / 2);
            }

            @include use-media(tablet-album) {
                flex-basis: calc(50% - 2.5rem / 2);
            }

            @include use-media(laptop) {
                flex-basis: calc(25% - 2.5rem * 3 / 4);
            }

            &:nth-child(1) {
                @include use-media(tablet) {
                    flex-basis: calc(50% - 2rem / 2);
                }

                @include use-media(tablet-album) {
                    flex-basis: calc(33.33% - 2.5rem * 2 / 3);
                }
            }

            &:nth-child(2) {
                @include use-media(tablet) {
                    flex-basis: calc(50% - 2rem / 2);
                }

                @include use-media(tablet-album) {
                    flex-basis: calc(33.33% - 2.5rem * 2 / 3);
                }
            }

            &:nth-child(3) {
                @include use-media(tablet) {
                    flex-basis: 100%;
                }

                @include use-media(tablet-album) {
                    flex-basis: calc(33.33% - 2.5rem * 2 / 3);
                }
            }
        }
    }

    .offer-card-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.5rem;

        @include use-media(tablet) {
            grid-template-columns: repeat(2, 1fr);
            gap: 2rem;
        }

        @include use-media(tablet-album) {
            gap: 2.5rem;
        }

        @include use-media(laptop-x) {
            grid-template-rows: repeat(2, 1fr);
        }

        & > * {
            &:nth-child(1) {
                @include use-media(tablet) {
                    grid-column: 1 / 3;
                }

                @include use-media(laptop-x) {
                    grid-column: 1;
                    grid-row: 1 / 3;
                }
            }

            &:nth-child(2) {
                @include use-media(laptop-x) {
                    grid-column: 2;
                    grid-row: 1;
                    min-height: 300px;
                }
            }

            &:nth-child(3) {
                @include use-media(laptop-x) {
                    grid-column: 2;
                    grid-row: 2;
                    min-height: 300px;
                }
            }
        }
    }
</style>
