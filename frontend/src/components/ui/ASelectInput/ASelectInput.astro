---
import AIcon from "../../AIcon.astro";
import ADropDown from "../ADropDown/ADropDownMenu/ADropDownMenu.astro";
type Size = "m" | "s";

interface Props {
	class?: string;
	className?: string;
	placeholder?: string;
	disabled?: boolean;
	name: string;
	value?: string;
	label?: string;
	forId?: string;
	hint?: string;
	required?: boolean;
	size: Size;
}

const {
	class: className,
	placeholder = 'Выберите',
	label,
	disabled,
	name,
	value,
	forId,
	hint,
	required,
	size = 'm',
	...rest
} = Astro.props;
---

<div
	class="a-select-input js-a-select-input"
	class:list={
		[
			className,
			{'a-input--required': required},
			{'a-select-input--disabled': disabled},
			`a-select-input--size-${size}`
		]
	}
	{...rest}
>
	{ label && (<label for={forId} class="a-select-input__label body-s-heavy">{label}</label>)}
	<div class="a-select-input__inner">
		<button class="a-select-input__button js-select-input-button">
			{
                placeholder && (<span class="a-select-input__placeholder">{placeholder}</span>)
            }
		</button>
		<input
			type="hidden"
			id={forId}
			name={name}
			disabled={disabled}
			value={value}
		/>
		<AIcon class="a-select-input__icon" symbolId="icon-chevron-down-small" size="s" />
		<ADropDown class="a-select-input__drop-down">
			<slot />
		</ADropDown>
	</div>
	{ hint && (<small class="a-select-input__hint js-a-input-hint caption-m" id=`${forId + '-hint'}`>{hint}</small>)}
</div>

<script>
	import initSelectInput from './';

	import { JS_CLASSES } from './';
	import type { ASelectInputState } from './interfaces'
	const currencyInputs: NodeListOf<HTMLDivElement> = document.querySelectorAll(JS_CLASSES.root);

	currencyInputs?.forEach((currencyInput) => {
		const input = initSelectInput(currencyInput) as ASelectInputState;

		input.elements.root.addEventListener('selected', (event) => {
			console.log('Selected', input)
		});
	});
</script>

<style lang="scss" is:global>
	@use "sass:map";
	@import "@styles/variables.scss";
	@import "@styles/functions.scss";
	@import "@styles/placeholders.scss";

	.a-select-input {
		$root: #{&};
        display: flex;
        flex-direction: column;
        gap: 0.5rem;

        &__label {
            color: var(--dark-70);
        }

		&__inner {
			position: relative;
		}

		&__icon {
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			right: 1rem;
			color: var(--violet-70);
			transition: transform ease .33s;
			pointer-events: none;
		}

		&__drop-down {
			top: calc(100% + 0.5rem);
			width: 100%;
		}

		&__placeholder {
			color: var(--dark-70);
		}

		&__button {
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
            width: 100%;
            text-align: left;
            cursor: pointer;
            border: 1px solid var(--purple-30);
            border-radius: 0.25rem;
            background-color: inherit;
		}

        &__hint {
            color: var(--dark-70);
        }

		&--size-m {
            #{$root}__button {
				padding: 1rem 2.5rem 1rem 1rem;
				font-size: 1rem;
				line-height: 1.375;
			}
		}

		&--size-s {
            #{$root}__button {
				padding: .625rem 2.5rem .625rem 1rem;
				font-size: .875rem;
				line-height: 1.3;
			}
		}

		&--disabled {
			& #{$root}__button {
				background-color: var(--dark-10);
				border-color: var(--dark-10);
				color: var(--dark-50);
				pointer-events: none;
			}

			& #{$root}__hint {
				color: #B5B0BA;
			}

			#{$root}__placeholder,
			#{$root}__icon {
				color: var(--dark-50);
			}
		}

		&.is-open & {
			&__icon {
				transform: translateY(-50%) rotate(-180deg);
			}
		}
	}
</style>
